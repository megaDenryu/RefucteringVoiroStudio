from api.Extend.BaseModel.model_dumpable import IModelDumpAble
from api.LLM.エージェント.会話用エージェント.自立型Ver1.体.BrainModule.脳内思考プロセス.思考モジュール.インターフェース.Iキャラ依存思考モデル import Iキャラ依存思考モデル
from api.LLM.エージェント.会話用エージェント.自立型Ver1.体.BrainModule.脳内思考プロセス.思考モジュール.創造的連想モデル.創造的連想モジュール import 創造的連想モジュール
from api.LLM.エージェント.会話用エージェント.自立型Ver1.体.BrainModule.脳内思考プロセス.思考モジュール.深層的自問自答モデル.思考用クエリ import 深層的自問自答クエリプロキシ
from api.LLM.エージェント.会話用エージェント.自立型Ver1.体.BrainModule.脳内思考プロセス.思考モジュール.深層的自問自答モデル.自問自答実行モジュール import 自問自答モジュール
from api.LLM.エージェント.会話用エージェント.自立型Ver1.体.BrainModule.脳内思考プロセス.状況統合.状況オブジェクト import 状況履歴
from api.LLM.エージェント.会話用エージェント.自立型Ver1.体.BrainModule.脳内思考プロセス.記憶部署.I記憶部署 import I記憶部署
from api.LLM.エージェント.会話用エージェント.自立型Ver1.体を持つ者.自分の情報.I自分の情報 import I自分の情報コンテナ

class 探索的に目標に向かう思考モデル(Iキャラ依存思考モデル):
    def __init__(self) -> None:
        pass

    async def 実行(self, v状況履歴: 状況履歴, v記憶部署: I記憶部署, vキャラクター情報: I自分の情報コンテナ,追伸:IModelDumpAble|str|None = None) -> IModelDumpAble:
        """
        探索的に目標に向かう思考モデルを実行する。
        - 試行錯誤：「やってみて、問題が出たら修正する」というプロセスを繰り返す。
        - 未知の状況で道を探すようなイメージ
        - できそうなことからやってみる
        というようなことを実現する。
        なのでこれのためには自問と自答と連想が必要になる。しかし連想には指向性がある。なのでどのようなことを連想するか、その方向性が必要になる、そしてそれはAIが考える必要がある。
        (目標1、自問1) -> (目標2、連想or計画or行動) ->  (目標2、確認) -> (目標3、自問or修正)
        """
        v自問自答モデル = 自問自答モジュール()
        v連想モデル = 創造的連想モジュール()
        目標が入ってるであろう自問自答の形跡 = await v自問自答モデル.実行(v状況履歴, v記憶部署, vキャラクター情報, "今の状況で考えるべき最重要な目標を認識するよう努めてください。")

        目標が入ってるであろう連想の形跡 = await v連想モデル.実行(v状況履歴, v記憶部署, vキャラクター情報, "目標を満たすために、目標に関連しそうなことを色々連想してみてください。")
        
